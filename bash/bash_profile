
# Setting PATH for Python 3.5
# The original version is saved in .bash_profile.pysave
#PATH="/Library/Frameworks/Python.framework/Versions/3.5/bin:${PATH}"
#export PATH

# Setting PATH for Python 3.6
# The original version is saved in .bash_profile.pysave
#PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}"
#export PATH

##
# Your previous /Users/harrisonlabollita/.bash_profile file was backed up as /Users/harrisonlabollita/.bash_profile.macports-saved_2018-12-12_at_07:23:51
##

# MacPorts Installer addition on 2018-12-12_at_07:23:51: adding an appropriate PATH variable for use with MacPorts.
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
# Finished adapting your PATH environment variable for use with MacPorts.

#Adding my custom bash scripts
source ~/.my_custom_commands.sh


# aliases
alias cdw="cd ~/botana_group/Projects/"
alias cds="cd ~/software/"


export CLICOLOR=1
export GREP_OPTIONS='--color=always' 
export BASH_SILENCE_DEPRECATION_WARNING=1


export PS1="[\w] "
#####XCrySDen#######
export XCRYSDEN_TOPDIR=/opt/local/share/xcrysden-1.5.60
export XCRYSDEN_SCRATCH=/tmp


function load() {
	if [[ "$1" == "wien2k" ]]; then
	# added by WIEN2k: BEGIN
	# --------------------------------------------------------
		alias lsi="ls -aslp *.in*"
		alias lso="ls -aslp *.output*"
		alias lsd="ls -aslp *.def"
		alias lsc="ls -aslp *.clm*"
		alias lss="ls -aslp *.scf* */*.scf"
		alias lse="ls -aslp *.error"
		alias LS="ls -aslp | grep /"
		alias pslapw="ps -ef |grep "lapw""
		alias cdww="cd /Users/harrisonlabollita/WIEN2k"
		if [ "$OMP_NUM_THREADS" = "" ]; then export OMP_NUM_THREADS=4; fi
		#export LD_LIBRARY_PATH=.....
		export EDITOR="vi"
		export SCRATCH=/Users/harrisonlabollita/SCRATCH
		if [ "$WIENROOT" = "" ]; then export WIENROOT=/Users/harrisonlabollita/software/commerical_dft_codes/wien2k/21.1; fi
		export W2WEB_CASE_BASEDIR=/Users/harrisonlabollita/WIEN2k
		export STRUCTEDIT_PATH=$WIENROOT/SRC_structeditor/bin
		export PDFREADER=Preview
		export PATH=$WIENROOT:$STRUCTEDIT_PATH:$WIENROOT/SRC_IRelast/script-elastic:$PATH:.
		export OCTAVE_EXEC_PATH=${PATH}::
		export OCTAVE_PATH=${STRUCTEDIT_PATH}::

		export PATH=$PATH:$WIENROOT:.
		#ulimit -s unlimited
	elif [[ "$1" == "intel" ]]; then
		echo 'sourcing intel compilers: ifort and icc'
		source /opt/intel/oneapi/setvars.sh
	elif [[ "$1" == "flapw" ]]; then
		alias flapwmbpt="/Users/harrisonlabollita/software/commerical_dft_codes/FlapwMBPT.2106/src/FlapwMBPT.exe"
	else
		echo 'purging loaded environments'
		source ~/.bash_profile
	fi
}
		
# source shell scripts
if [ -d "$HOME/shell-scripts" ]; then 
   for file in "$HOME/shell-scripts/*"; do
	   source $file
   done
fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/harrisonlabollita/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/harrisonlabollita/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/harrisonlabollita/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/harrisonlabollita/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
if [[ -n $TMUX  ]]; then 
	conda deactivate
	conda activate fermi
fi
# DMFTTOOLS
export DMFTTOOLS_PATH=/Users/harrisonlabollita/software/dmftTools/src
alias init_dftdmft="$DMFTTOOLS_PATH/csc/init_dftdmft"
alias run_dftdmft="$DMFTTOOLS_PATH/csc/run_dftdmft"
alias run_osdmft="python $DMFTTOOLS_PATH/singleshot/run.py"
# END DMFTTOOLS
# QUESTAAL
export PATH="/Users/harrisonlabollita/software/apps/lm/bin:$PATH"

source ~/.config/fzf/completion.bash
source ~/.config/fzf/tab-completion.bash
#bind -x '"\t": fzf_bash_completion'
